:mod:`data_scout.transformations.count`
=======================================

.. py:module:: data_scout.transformations.count


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   data_scout.transformations.count.CountExact
   data_scout.transformations.count.CountRegex
   data_scout.transformations.count.CountDelimiters




.. class:: CountExact(arguments: dict, sample_size: int, example: dict = None)


   Bases: :py:obj:`data_scout.transformations.transformation.Transformation`

   .. attribute:: title
      :annotation: = Count exact matches of {search} in {field} as {output}

      

   .. attribute:: key
      :annotation: = Count string matches

      

   .. attribute:: fields
      

      

   .. method:: __call__(self, row, index: int)



.. class:: CountRegex(arguments: dict, sample_size: int, example: dict = None)


   Bases: :py:obj:`data_scout.transformations.transformation.Transformation`

   .. attribute:: title
      :annotation: = Count exact matches of the regex {pattern} in {field} as {output}

      

   .. attribute:: key
      :annotation: = Count regex matches

      

   .. attribute:: fields
      

      

   .. method:: __call__(self, row, index: int)



.. class:: CountDelimiters(arguments: dict, sample_size: int, example: dict = None)


   Bases: :py:obj:`data_scout.transformations.transformation.Transformation`

   .. attribute:: title
      :annotation: = Count the number of strings between delimiter {delimiter} in {field} as {output}

      

   .. attribute:: key
      :annotation: = Count between delimiters

      

   .. attribute:: fields
      

      

   .. method:: __call__(self, row, index: int)




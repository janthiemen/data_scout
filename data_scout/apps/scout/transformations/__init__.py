from . import math, math_custom, data, format, count, replace, filter, extract, extract_datetime, string


TRANSFORMATION_MAP = {
    "data-convert": data.Convert,
    "data-convert-datetime": data.ConvertDatetime,
    "data-field-column": data.FieldToColumn,
    "math-add": math.Add,
    "math-min": math.Min,
    "math-multiply": math.Multiply,
    "math-divide": math.Divide,
    "math-custom": math_custom.Custom,

    "string-substring-left": string.SubstringLeft,
    "string-substring-right": string.SubstringRight,
    "string-substring": string.Substring,

    "string-find-left": string.FindLeft,
    "string-find-right": string.FindRight,

    "string-length": string.Length,
    "string-merge": string.Merge,
    "string-repeat": string.Repeat,

    "string-test-contains": string.TestContains,
    "string-test-startswith": string.TestStartsWith,
    "string-test-endswith": string.TestEndsWith,
    "string-test-regex": string.TestRegex,
    "string-test-exact": string.TestExact,
    "string-test-greater": string.TestGreater,
    "string-test-greater-equal": string.TestGreaterEqual,
    "string-test-less": string.TestLess,
    "string-test-less-equal": string.TestLessEqual,

    "string-base64-encode": string.Base64Encode,
    "string-base64-decode": string.Base64Decode,

    "format-uppercase": format.UpperCase,
    "format-lowercase": format.LowerCase,
    "format-propercase": format.ProperCase,
    "format-trim-whitespace": format.TrimWhitespace,
    "format-trim-quotes": format.TrimQuotes,
    "format-remove-whitespace": format.RemoveWhitespace,
    "format-remove-symbols": format.RemoveSymbols,
    "format-remove-accents": format.RemoveAccents,
    "format-add-prefix": format.AddPrefix,
    "format-add-suffix": format.AddSuffix,
    "format-pad": format.Pad,
    "count-exact": count.CountExact,
    "count-pattern": count.CountRegex,
    "count-delimiters": count.CountDelimiters,
    "replace-text": replace.ReplaceText,
    "replace-regex": replace.ReplaceRegex,
    "replace-delimiters": replace.ReplaceDelimiters,
    "replace-positions": replace.ReplacePositions,
    "replace-mismatched": replace.ReplaceMismatched,
    "replace-missing": replace.ReplaceMissing,
    "extract-numbers": extract.ExtractNumbers,
    "extract-httpquerystrings": extract.ExtractHttpQueryString,
    "extract-regex": extract.ExtractRegex,
    "extract-delimiters": extract.ExtractDelimiters,
    "extract-positions": extract.ExtractPositions,
    "datetime-extract-year": extract_datetime.ExtractYear,
    "datetime-extract-month": extract_datetime.ExtractMonth,
    "datetime-extract-day": extract_datetime.ExtractDay,
    "datetime-extract-week": extract_datetime.ExtractWeek,
    "datetime-extract-dayofweek": extract_datetime.ExtractDayOfWeek,
    "datetime-extract-dayofyear": extract_datetime.ExtractDayOfYear,
    "datetime-extract-hours": extract_datetime.ExtractHours,
    "datetime-extract-minutes": extract_datetime.ExtractMinutes,
    "datetime-extract-seconds": extract_datetime.ExtractSeconds,
    "datetime-extract-timestamp": extract_datetime.ExtractTimestamp,
    "filter-value-missing": filter.FilterMissing,
    "filter-value-mismatched": filter.FilterMismatched,
    "filter-value-is": filter.FilterIs,
    "filter-value-isnot": filter.FilterIsNot,
    "filter-value-isoneof": filter.FilterIsOneOf,
    "filter-value-isnotoneof": filter.FilterIsnotOneOf,
    "filter-value-between": filter.FilterBetween,
    "filter-value-notbetween": filter.FilterNotBetween,
    "filter-value-contains": filter.FilterContains,
    "filter-value-startswith": filter.FilterStartsWith,
    "filter-value-endswith": filter.FilterEndsWith,
    "filter-value-pattern": filter.FilterRegex,
    "filter-rows-interval": filter.FilterRowsInterval,
    "filter-rows-range": filter.FilterRowsRange,
    "filter-rows-top": filter.FilterRowsTop,
    "filter-rows-duplicate": filter.FilterRowsDuplicates,
}

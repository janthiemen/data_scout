:mod:`data_scout.scout`
=======================

.. py:module:: data_scout.scout


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   data_scout.scout.Scout




.. class:: Scout(logger: logging.Logger = None, extensions: List[dict] = None)


   This is the main controller class. It manages all meta information, and installs/imports packages

   .. method:: execute_json(self, definition: dict, executor_class)

      Execute a JSON pipeline definition.

      :param definition: Dict containing: use_sample, sampling_technique, column_types, data_source, pipeline
      :param executor_class: A class that shall be initialized and called
      :return: The results of the executor


   .. method:: load_extensions(self)

      Load/install all extensions.

      :return:


   .. method:: _import_module(self, module)


   .. method:: load_extension(self, extension: dict)

      Load/install an extensions and add its transformations to the transformation map.

      :param extension: A dict containing the package name, install path and a list of transformations
      :return:


   .. method:: get_data_source(self, data_source: str) -> Type[data_scout.connectors.Connector]



